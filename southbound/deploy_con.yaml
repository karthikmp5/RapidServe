---
- name: Deploy Infrastructure with Docker Containers for Edge and Origin Servers
  hosts: localhost
  gather_facts: no
  become: true

  vars:
    container_num: 2  # Base number for the container
    server_type: "edge"  # 'edge' or 'origin'
    vpc_name: "nf_us"  
    origin_vm_ip: 10.10.10.10
    full_container_name: "{{ vpc_name }}_{{ server_type }}_{{ container_num }}"  # Combined name for simplified use
    bridge_name: subnet_name

  tasks:
    - name: Check if network namespace exists
      command: ip netns list | grep -w {{ vpc_name }}
      register: ns_check
      failed_when: ns_check.stdout == ""

    - name: Fail if network namespace does not exist
      fail:
        msg: "Namespace {{ vpc_name }} does not exist. Please run 'deploy_infra' to create the namespace first."
      when: ns_check is failed

    - name: Create NGINX configuration file from template for edge servers
      template:
        src: "nginx.conf.j2"
        dest: "{{ playbook_dir }}/nginx-{{ full_container_name }}.conf"
      when: server_type == 'edge'

    - name: Conditionally create index.html for origin servers
      template:
        src: "index.html.j2"
        dest: "{{ playbook_dir }}/index.html"
      when: server_type == 'origin'

    - name: Build Docker image with custom NGINX config
      community.docker.docker_image:
        name: "{{ full_container_name }}"
        tag: "latest"
        build:
          path: "{{ playbook_dir }}"
          dockerfile: "Dockerfile-{{ server_type }}"
          args:
            NGINX_CONF: "nginx-{{ full_container_name }}.conf"
          nocache: true
          rm: true
        state: present
        source: build

    - name: Create and start Docker container
      community.docker.docker_container:
        name: "{{ full_container_name }}"
        image: "{{ full_container_name }}:latest"
        state: started
        network_mode: none
        tty: true
        restart_policy: unless-stopped

    - name: Get container PID
      command: docker inspect --format '{''{.State.Pid}}' "{{ full_container_name }}"
      register: docker_pid

    - name: Link network namespace of container
      command: ln -sf /proc/{{ docker_pid.stdout }}/ns/net /var/run/netns/{{ full_container_name }}

    - name: Create veth pair
      command: ip link add {{ full_container_name }} type veth peer name v_{{ full_container_name }}

    - name: Set up veth pair and container network
      block:
        - name: Bring up veth peer
          command: "ip link set v_{{ full_container_name }} up"
        - name: Assign container network interface to veth
          command: "ip link set {{ full_container_name }} netns {{ full_container_name }}"
        - name: Bring up container network interface in vpc_name namespace
          command: "ip netns exec {{ vpc_name }} ip link set v-{{ full_container_name }} up"
        - name: Attach veth pair to bridge
          command: ip link set v_{{ full_container_name }} master {{ bridge_name }}
